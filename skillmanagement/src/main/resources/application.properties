#Server
server.host:localhost
server.port:8091

#Database
spring.datasource.url=jdbc:h2:~/databases/SkillManagement;INIT=RUNSCRIPT FROM 'src/main/resources/schema.sql';
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jdbc.database-platform=org.hibernate.dialect.H2Dialect

#Logging JDBC
logging.level.org.springframework.jdbc.core=TRACE

#RabbitMQ
spring.rabbitmq.host=localhost
spring.rabbitmq.username=admin
spring.rabbitmq.password=admin
spring.rabbitmq.port=5672

rabbitmq.queue.check.skills.name=checkSkills
rabbitmq.queue.check.skills.durable=true
#keeps track of member added to check the skills in the SkillManagement service
rabbitmq.queue.check.skills.routing.key=*.added
rabbitmq.exchange.name=exchange.topic.skillbased.projectassignment

#Kafka
spring.kafka.consumer.bootstrap-servers: localhost:9092
spring.kafka.consumer.group-id: projectmanagement-skillmanagement
spring.kafka.consumer.auto-offset-reset: earliest
spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.producer.bootstrap-servers: localhost:9092
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.apache.kafka.common.serialization.StringSerializer

kafka.topic.name.listener=check-skills
kafka.topic.name.publisher=manage-members
kafka.topic.name.reply=check-skills-reply