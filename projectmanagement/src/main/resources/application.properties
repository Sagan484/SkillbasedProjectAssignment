#Server
server.host:localhost
server.port:8090

#Database
spring.datasource.url=jdbc:h2:~/databases/ProjectManagement;INIT=RUNSCRIPT FROM 'src/main/resources/schema.sql';
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jdbc.database-platform=org.hibernate.dialect.H2Dialect

#Logging
logging.level.org.springframework.jdbc.core=TRACE

#RabbitMQ
spring.rabbitmq.host=localhost
spring.rabbitmq.username=admin
spring.rabbitmq.password=admin
spring.rabbitmq.port=5672
rabbitmq.queue.manage.members.name=manageMembers
rabbitmq.queue.manage.members.durable=true
#keeps track of checked skills of a member to add or remove the member in the ProjectManagement service
rabbitmq.queue.manage.members.routing.key=*.changed
rabbitmq.exchange.name=exchange.topic.skillbased.projectmanagement

#Kafka
spring.kafka.consumer.bootstrap-servers: localhost:9092
spring.kafka.consumer.group-id: skillmanagement
spring.kafka.consumer.auto-offset-reset: earliest
spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

spring.kafka.producer.bootstrap-servers: localhost:9092
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.apache.kafka.common.serialization.StringSerializer

spring.kafka.topic.name=managed-members